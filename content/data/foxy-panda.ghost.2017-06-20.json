{"meta":{"exported_on":1497971352951,"version":"006"},"data":{"posts":[{"id":1,"uuid":"5528eb3d-2a8f-4cf2-9ffd-db057639daff","title":"Welcome to Ghost","slug":"welcome-to-ghost","markdown":"You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at `<your blog URL>/ghost/`. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!\n\n# Getting Started\n\nGhost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!\n\nWriting in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use *shortcuts* to **style** your content. For example, a list:\n\n* Item number one\n* Item number two\n    * A nested item\n* A final item\n\nor with numbers!\n\n1. Remember to buy some milk\n2. Drink the milk\n3. Tweet that I remembered to buy the milk, and drank it\n\n## Links\n\nWant to link to a source? No problem. If you paste in a URL, like http://ghost.org - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to [the Ghost website](http://ghost.org). Neat.\n\n### What about Images?\n\nImages work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:\n\n![The Ghost Logo](https://ghost.org/images/ghost.png)\n\nNot sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:\n\n![A bowl of bananas]\n\n\n### Quoting\n\nSometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!\n\n> Ghost - Just a blogging platform\n\n### Working with Code\n\nGot a streak of geek? We've got you covered there, too. You can write inline `<code>` blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.\n\n```language-css line-numbers\n.awesome-thing {\n    display: block;\n    width: 100%;\n}\n```\n\n### Ready for a Break? \n\nThrow 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.\n\n---\n\n### Advanced Usage\n\nThere's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.\n\n<input type=\"text\" placeholder=\"I'm an input field!\" />\n\nThat should be enough to get you started. Have fun - and let us know what you think :)","mobiledoc":null,"html":"<p>You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at <code>&lt;your blog URL&gt;/ghost/</code>. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!</p>\n\n<h1 id=\"gettingstarted\">Getting Started</h1>\n\n<p>Ghost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!</p>\n\n<p>Writing in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use <em>shortcuts</em> to <strong>style</strong> your content. For example, a list:</p>\n\n<ul>\n<li>Item number one</li>\n<li>Item number two\n<ul><li>A nested item</li></ul></li>\n<li>A final item</li>\n</ul>\n\n<p>or with numbers!</p>\n\n<ol>\n<li>Remember to buy some milk  </li>\n<li>Drink the milk  </li>\n<li>Tweet that I remembered to buy the milk, and drank it</li>\n</ol>\n\n<h2 id=\"links\">Links</h2>\n\n<p>Want to link to a source? No problem. If you paste in a URL, like <a href=\"http://ghost.org\">http://ghost.org</a> - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to <a href=\"http://ghost.org\">the Ghost website</a>. Neat.</p>\n\n<h3 id=\"whataboutimages\">What about Images?</h3>\n\n<p>Images work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:</p>\n\n<p><img src=\"https://ghost.org/images/ghost.png\" alt=\"The Ghost Logo\" /></p>\n\n<p>Not sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:</p>\n\n<h3 id=\"quoting\">Quoting</h3>\n\n<p>Sometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!</p>\n\n<blockquote>\n  <p>Ghost - Just a blogging platform</p>\n</blockquote>\n\n<h3 id=\"workingwithcode\">Working with Code</h3>\n\n<p>Got a streak of geek? We've got you covered there, too. You can write inline <code>&lt;code&gt;</code> blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.</p>\n\n<pre><code class=\"language-css line-numbers\">.awesome-thing {\n    display: block;\n    width: 100%;\n}\n</code></pre>\n\n<h3 id=\"readyforabreak\">Ready for a Break?</h3>\n\n<p>Throw 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.</p>\n\n<hr />\n\n<h3 id=\"advancedusage\">Advanced Usage</h3>\n\n<p>There's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.</p>\n\n<p><input type=\"text\" placeholder=\"I'm an input field!\" /></p>\n\n<p>That should be enough to get you started. Have fun - and let us know what you think :)</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-25 22:49:24","created_by":1,"updated_at":"2016-08-28 13:04:07","updated_by":1,"published_at":"2016-08-25 22:49:24","published_by":1},{"id":2,"uuid":"e968ca2b-a575-44dc-b701-9ecbcccd7236","title":"Test Post #1","slug":"test-post-1","markdown":"Nulla quis lorem ut libero malesuada feugiat. Proin eget tortor risus. Donec rutrum congue leo eget malesuada. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.\n\nVestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec velit neque, auctor sit amet aliquam vel, ullamcorper sit amet ligula. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Cras ultricies ligula sed magna dictum porta. Vivamus magna justo, lacinia eget consectetur sed, convallis at tellus.","mobiledoc":null,"html":"<p>Nulla quis lorem ut libero malesuada feugiat. Proin eget tortor risus. Donec rutrum congue leo eget malesuada. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.</p>\n\n<p>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec velit neque, auctor sit amet aliquam vel, ullamcorper sit amet ligula. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Cras ultricies ligula sed magna dictum porta. Vivamus magna justo, lacinia eget consectetur sed, convallis at tellus.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-25 23:25:31","created_by":1,"updated_at":"2016-08-25 23:25:41","updated_by":1,"published_at":"2016-08-25 23:25:41","published_by":1},{"id":3,"uuid":"5a7a3e6b-647c-4fe6-8aaa-58767d4a3e69","title":"Test Post #2","slug":"test-post-2","markdown":"Nulla quis lorem ut libero malesuada feugiat. Proin eget tortor risus. Donec rutrum congue leo eget malesuada. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;\n\nDonec velit neque, auctor sit amet aliquam vel, ullamcorper sit amet ligula. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Cras ultricies ligula sed magna dictum porta. Vivamus magna justo, lacinia eget consectetur sed, convallis at LATEX GOODNESS $\\LaTeX$ tellus.\n\n$\\LaTeX$, pronounced lah-tekh, lah-tek or lay-tek, is a document preparation system. The core idea to understand here is that in $\\LaTeX$ editors you don't get fancy formatted text as you type, but instead, you type in plain text first and only after compilation do you get the formatted result. The best part is that you can use special markup to customise the formatting and the overall look and feel of your document however you please. For example, if you were to type then compile <code class=\"language-latex\">\\sum\\_{i=1}^{n} \\frac{2i + 5}{2^{i}}</code> you would get something like this: \n\\\\(\\sum\\_{i=1}^{n} \\frac{2i + 5}{2^{i}}\\\\). Amazing, isn't it?\n\n[New Window](#) and [~Same Window](#)","mobiledoc":null,"html":"<p>Nulla quis lorem ut libero malesuada feugiat. Proin eget tortor risus. Donec rutrum congue leo eget malesuada. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;</p>\n\n<p>Donec velit neque, auctor sit amet aliquam vel, ullamcorper sit amet ligula. Vestibulum ac diam sit amet quam vehicula elementum sed sit amet dui. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Cras ultricies ligula sed magna dictum porta. Vivamus magna justo, lacinia eget consectetur sed, convallis at LATEX GOODNESS $\\LaTeX$ tellus.</p>\n\n<p>$\\LaTeX$, pronounced lah-tekh, lah-tek or lay-tek, is a document preparation system. The core idea to understand here is that in $\\LaTeX$ editors you don't get fancy formatted text as you type, but instead, you type in plain text first and only after compilation do you get the formatted result. The best part is that you can use special markup to customise the formatting and the overall look and feel of your document however you please. For example, if you were to type then compile <code class=\"language-latex\">\\sum_{i=1}^{n} \\frac{2i + 5}{2^{i}}</code> you would get something like this: \n\\(\\sum_{i=1}^{n} \\frac{2i + 5}{2^{i}}\\). Amazing, isn't it?</p>\n\n<p><a href=\"#\">New Window</a> and <a href=\"#\">~Same Window</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-25 23:25:49","created_by":1,"updated_at":"2016-08-28 14:14:44","updated_by":1,"published_at":"2016-08-25 23:25:55","published_by":1},{"id":4,"uuid":"62b2049f-c200-4fb6-ae6a-cc6ba8b6e6a9","title":"Lorem Ipsum","slug":"lorem-ipsum","markdown":"# Abstract\n\nIt's not a secret that for almost all people attempting to learn C pointers are a grey area. I personally was struggling quite a lot understanding them but I was saved by a huge amount of amazing guides on pointer usage you can find online. That said, I still feel like implementation of higher order functions in C deserves more exposure that it currently has and this article is my attempt to contribute to this cause.\n\n> **Note:** In this article I'm gonna assume that you have some experience with C and know what pointers are. Additionally, I will assume you know how to write and compile `.c` files.\n\n# What are higher order functions?\n\n[Higher order functions](https://en.wikipedia.org/wiki/Higher-order_function) take other functions as their arguments or return new functions when they terminate. It might sound confusing especially if you've never seen it being done before but in reality it is really quite simple. Consider the pseudocode below:\n\n```language-lua\nreverse(string)\n    -- Some code to reverse the string\n    return string\n\nuppercase(string)\n    -- Some code to convert string to uppercase\n    return string\n\napply(string, operation)\n    return operation(string)\n\nhello := \"hello\"\n\n-- Reverse the string\nhello := apply(hello, reverse)\n\n-- Convert the string to uppercase\nhello := apply(hello, uppercase)\n```\n\nTo summarise: `apply()` function above takes 2 parameters: a string and an another function. Then, as the name implies, it applies the `operation` to the supplied `string` and returns whatever comes out. This results in a very interesting form of [polymorphism](https://en.wikipedia.org/wiki/Polymorphism_(computer_science)): our `apply()` function can take any `operation` regardless of what it does as long as it accepts a string as an argument and returns the string afterwards.\n\nThe example above looks at the scenario when a function takes other functions as its arguments. Now let's take a look at functions that return new functions:\n\n```language-lua\nmultiplyOperation(coefficient)\n    -- Declare new function that multiplies the\n    -- supplied argument by the coefficient\n    operation(number)\n        return number * coefficient\n    -- Return the new function\n    return operation\n\n-- Function that multiplies everything by 5\nmultiplyBy5 := multiplyOperation(5)\n\n-- This will return 35\nmultipleBy5(7)\n```\n\nAs seen above, `multiplyOperation()` returns a new function that changes its behaviour depending on what value for the `coefficient` has been supplied to `multiplyOperation()`. Keep in mind that the examples above are just pseudocode to give you an idea of what higher order functions are about and C implementation will not necessarily look the same.\n\n# Function pointers in C\n\nTo achieve the functionality discussed in the previous section we're gonna use function pointers, which are pretty straightforward and shouldn't take you too long to wrap your head around. Before we start, remind yourself of these 2 things:\n\n* You can get the address of a variable using the `&` operator, like so: <code class=\"language-c\">int *a = &b;</code> (`a` can now be used as a pointer to `b`). That said, when referencing a function you are allowed to drop the `&` operator. If you still don't have that much experience with pointers, I recommend leaving it in.\n* Before you can access the variable a pointer is pointing to, you must dereference said pointer. Let's take integer pointer `a` from the line above - if I want to use it in a calculation, I need to dereference it using the `*` operator: <code class=\"language-c\">int c = 3 + *a;</code>.\n\n```language-c\n// Required for the `printf()` function\n#include <stdio.h>\n\n// The function we'll be pointing to\nint halve(int number) {\n    return number / 2;\n}\n\nvoid main() {\n    // Declare a pointer to the `halve` function\n    // We say that operation takes 1 int argument\n    // and returns an int when it terminates\n    int (*operation)(int) = &halve;\n\n    // Alternatively, you can drop the `&`:\n    int (*anotherOperation)(int) = halve;\n    // From here onwards, I will always drop the\n    // `&` to make the code a bit more concise\n\n    // Dereference the pointer to `halve` first,\n    // then supply relevant arguments to it\n    int halved = (*operation)(10);\n\n    // Should print `5`, try it yourself\n    printf(\"%d\", halved);\n}\n```\n\nAs you can see in the beginning of the `main()` method, pointers to functions have a rather unusual type declaration. It consists of 3 parts:\n\n1. The type before the parenthesis is the return type of the function the pointer is referencing. \n2. The middle part, is the name of the pointer. Note that you have to wrap it into parenthesis to indicate that this a pointer to a function.\n3. The last part contains the types of parameters the function is expecting.\n\nFor example, the type for a pointer to a function that accepts 2 character arrays and returns a double would look as follows: <code class=\"language-c\">double (\\*someFunction)(char\\*, char\\*)</code>. It is possible to go much deeper and, in fact, I'll show you an example in the end of this article.\n\n# Implementing the `map()` function\n\nAs an exercise, let's implement the [infamous `map()` function](https://en.wikipedia.org/wiki/Map_(higher-order_function)). This function takes 2 arguments:\n\n1. Some [unary function](https://en.wikipedia.org/wiki/Unary_function) that accepts an argument of type `A` and returns some value of type `B`.\n2. An array of type `A`. Keep in mind, type `A` can be the same as type `B`.\n\nThe return value is a new array of type `B`. This new array is generated by applying the supplied unary function to every element in the supplied array of type `A`.\n\n## `map()` for integers\n\nTo make our lives easier we will only work with integers (for now). Below you can find the implementation of the `map()` function that only works with unary operations on integers and integer arrays.  \n\n```language-c\n// Required for the `printf()` function\n#include <stdio.h>\n// Required for memory management\n// (`malloc()`, `free()`, etc.)\n#include <stdlib.h>\n\n// Multiply a number by 3\nint triple(int number) {\n    return number * 3;\n}\n\n// A rather complex function definition, read more about it below\nint* map(int (*function)(int), int* array, int size) {\n    // Allocate memory for our new array\n    int* newArray = malloc(sizeof(int) * size);\n\n    int i;\n    // Apply the function to every element of the supplied\n    // array and save the values into the new array\n    for(i = 0; i < size; i++) {\n        newArray[i] = function(array[i]);\n    }\n\n    // Return the pointer to the new array\n    // (you must free the memory after\n    // you're done working with it)\n    return newArray;\n}\n\nvoid main() {\n    // Initial array of size 4\n    int array[4] = { 1, 2, 3, 4 };\n\n    // Map the array above using the `triple()` function\n    int* tripledArray = map(triple, array, 4);\n\n    int i;\n    // Print the new values\n    for(i = 0; i < 4; i++) {\n        printf(\"%d \", tripledArray[i]);\n    }\n\n    // Don't forget to free the memory afterwards\n    free(tripledArray);\n}\n```\n\nI tried to add comments to all of the important parts but I want to discuss the `map()` function definition separtely. Let's break it down: <code class=\"language-c\">int* map(int (\\*function)(int), int\\* array, int length) {...}</code>\n\n* As in any other function, the first part (`int*`) denotes the return type of our `map()`. In this particular case it's a pointer to an integer array.\n* `map` is simply the function name, nothing fancy here.\n* Now the interesting part - function parameters. There are of them:\n    1. <code class=\"language-c\">int (\\*function)(int)</code> Defines a parameter called `function` that is a pointer to a function accepting one integer and returning an integer.\n    2. <code class=\"language-c\">int\\* array</code> A pointer to an integer array over which we'll be iterating.\n    3. <code class=\"language-c\">int size</code> Integer storing the size of said array.\n\n## Polymorphic `map()`\n\n# We need to go deeper\n\n[](http://stackoverflow.com/questions/840501/how-do-function-pointers-in-c-work)","mobiledoc":null,"html":"<h1 id=\"abstract\">Abstract</h1>\n\n<p>It's not a secret that for almost all people attempting to learn C pointers are a grey area. I personally was struggling quite a lot understanding them but I was saved by a huge amount of amazing guides on pointer usage you can find online. That said, I still feel like implementation of higher order functions in C deserves more exposure that it currently has and this article is my attempt to contribute to this cause.</p>\n\n<blockquote>\n  <p><strong>Note:</strong> In this article I'm gonna assume that you have some experience with C and know what pointers are. Additionally, I will assume you know how to write and compile <code>.c</code> files.</p>\n</blockquote>\n\n<h1 id=\"whatarehigherorderfunctions\">What are higher order functions?</h1>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Higher-order_function\">Higher order functions</a> take other functions as their arguments or return new functions when they terminate. It might sound confusing especially if you've never seen it being done before but in reality it is really quite simple. Consider the pseudocode below:</p>\n\n<pre><code class=\"language-lua\">reverse(string)  \n    -- Some code to reverse the string\n    return string\n\nuppercase(string)  \n    -- Some code to convert string to uppercase\n    return string\n\napply(string, operation)  \n    return operation(string)\n\nhello := \"hello\"\n\n-- Reverse the string\nhello := apply(hello, reverse)\n\n-- Convert the string to uppercase\nhello := apply(hello, uppercase)  \n</code></pre>\n\n<p>To summarise: <code>apply()</code> function above takes 2 parameters: a string and an another function. Then, as the name implies, it applies the <code>operation</code> to the supplied <code>string</code> and returns whatever comes out. This results in a very interesting form of <a href=\"https://en.wikipedia.org/wiki/Polymorphism_(computer_science)\">polymorphism</a>: our <code>apply()</code> function can take any <code>operation</code> regardless of what it does as long as it accepts a string as an argument and returns the string afterwards.</p>\n\n<p>The example above looks at the scenario when a function takes other functions as its arguments. Now let's take a look at functions that return new functions:</p>\n\n<pre><code class=\"language-lua\">multiplyOperation(coefficient)  \n    -- Declare new function that multiplies the\n    -- supplied argument by the coefficient\n    operation(number)\n        return number * coefficient\n    -- Return the new function\n    return operation\n\n-- Function that multiplies everything by 5\nmultiplyBy5 := multiplyOperation(5)\n\n-- This will return 35\nmultipleBy5(7)  \n</code></pre>\n\n<p>As seen above, <code>multiplyOperation()</code> returns a new function that changes its behaviour depending on what value for the <code>coefficient</code> has been supplied to <code>multiplyOperation()</code>. Keep in mind that the examples above are just pseudocode to give you an idea of what higher order functions are about and C implementation will not necessarily look the same.</p>\n\n<h1 id=\"functionpointersinc\">Function pointers in C</h1>\n\n<p>To achieve the functionality discussed in the previous section we're gonna use function pointers, which are pretty straightforward and shouldn't take you too long to wrap your head around. Before we start, remind yourself of these 2 things:</p>\n\n<ul>\n<li>You can get the address of a variable using the <code>&amp;</code> operator, like so: <code class=\"language-c\">int *a = &b;</code> (<code>a</code> can now be used as a pointer to <code>b</code>). That said, when referencing a function you are allowed to drop the <code>&amp;</code> operator. If you still don't have that much experience with pointers, I recommend leaving it in.</li>\n<li>Before you can access the variable a pointer is pointing to, you must dereference said pointer. Let's take integer pointer <code>a</code> from the line above - if I want to use it in a calculation, I need to dereference it using the <code>*</code> operator: <code class=\"language-c\">int c = 3 + *a;</code>.</li>\n</ul>\n\n<pre><code class=\"language-c\">// Required for the `printf()` function\n#include &lt;stdio.h&gt;\n\n// The function we'll be pointing to\nint halve(int number) {  \n    return number / 2;\n}\n\nvoid main() {  \n    // Declare a pointer to the `halve` function\n    // We say that operation takes 1 int argument\n    // and returns an int when it terminates\n    int (*operation)(int) = &amp;halve;\n\n    // Alternatively, you can drop the `&amp;`:\n    int (*anotherOperation)(int) = halve;\n    // From here onwards, I will always drop the\n    // `&amp;` to make the code a bit more concise\n\n    // Dereference the pointer to `halve` first,\n    // then supply relevant arguments to it\n    int halved = (*operation)(10);\n\n    // Should print `5`, try it yourself\n    printf(\"%d\", halved);\n}\n</code></pre>\n\n<p>As you can see in the beginning of the <code>main()</code> method, pointers to functions have a rather unusual type declaration. It consists of 3 parts:</p>\n\n<ol>\n<li>The type before the parenthesis is the return type of the function the pointer is referencing.  </li>\n<li>The middle part, is the name of the pointer. Note that you have to wrap it into parenthesis to indicate that this a pointer to a function.  </li>\n<li>The last part contains the types of parameters the function is expecting.</li>\n</ol>\n\n<p>For example, the type for a pointer to a function that accepts 2 character arrays and returns a double would look as follows: <code class=\"language-c\">double (*someFunction)(char*, char*)</code>. It is possible to go much deeper and, in fact, I'll show you an example in the end of this article.</p>\n\n<h1 id=\"implementingthemapfunction\">Implementing the <code>map()</code> function</h1>\n\n<p>As an exercise, let's implement the <a href=\"https://en.wikipedia.org/wiki/Map_(higher-order_function)\">infamous <code>map()</code> function</a>. This function takes 2 arguments:</p>\n\n<ol>\n<li>Some <a href=\"https://en.wikipedia.org/wiki/Unary_function\">unary function</a> that accepts an argument of type <code>A</code> and returns some value of type <code>B</code>.  </li>\n<li>An array of type <code>A</code>. Keep in mind, type <code>A</code> can be the same as type <code>B</code>.</li>\n</ol>\n\n<p>The return value is a new array of type <code>B</code>. This new array is generated by applying the supplied unary function to every element in the supplied array of type <code>A</code>.</p>\n\n<h2 id=\"mapforintegers\"><code>map()</code> for integers</h2>\n\n<p>To make our lives easier we will only work with integers (for now). Below you can find the implementation of the <code>map()</code> function that only works with unary operations on integers and integer arrays.  </p>\n\n<pre><code class=\"language-c\">// Required for the `printf()` function\n#include &lt;stdio.h&gt;\n// Required for memory management\n// (`malloc()`, `free()`, etc.)\n#include &lt;stdlib.h&gt;\n\n// Multiply a number by 3\nint triple(int number) {  \n    return number * 3;\n}\n\n// A rather complex function definition, read more about it below\nint* map(int (*function)(int), int* array, int size) {  \n    // Allocate memory for our new array\n    int* newArray = malloc(sizeof(int) * size);\n\n    int i;\n    // Apply the function to every element of the supplied\n    // array and save the values into the new array\n    for(i = 0; i &lt; size; i++) {\n        newArray[i] = function(array[i]);\n    }\n\n    // Return the pointer to the new array\n    // (you must free the memory after\n    // you're done working with it)\n    return newArray;\n}\n\nvoid main() {  \n    // Initial array of size 4\n    int array[4] = { 1, 2, 3, 4 };\n\n    // Map the array above using the `triple()` function\n    int* tripledArray = map(triple, array, 4);\n\n    int i;\n    // Print the new values\n    for(i = 0; i &lt; 4; i++) {\n        printf(\"%d \", tripledArray[i]);\n    }\n\n    // Don't forget to free the memory afterwards\n    free(tripledArray);\n}\n</code></pre>\n\n<p>I tried to add comments to all of the important parts but I want to discuss the <code>map()</code> function definition separtely. Let's break it down: <code class=\"language-c\">int* map(int (*function)(int), int* array, int length) {...}</code></p>\n\n<ul>\n<li>As in any other function, the first part (<code>int*</code>) denotes the return type of our <code>map()</code>. In this particular case it's a pointer to an integer array.</li>\n<li><code>map</code> is simply the function name, nothing fancy here.</li>\n<li>Now the interesting part - function parameters. There are of them:\n<ol><li><code class=\"language-c\">int (*function)(int)</code> Defines a parameter called <code>function</code> that is a pointer to a function accepting one integer and returning an integer.</li>\n<li><code class=\"language-c\">int* array</code> A pointer to an integer array over which we'll be iterating.</li>\n<li><code class=\"language-c\">int size</code> Integer storing the size of said array.</li></ol></li>\n</ul>\n\n<h2 id=\"polymorphicmap\">Polymorphic <code>map()</code></h2>\n\n<h1 id=\"weneedtogodeeper\">We need to go deeper</h1>\n\n<p><a href=\"http://stackoverflow.com/questions/840501/how-do-function-pointers-in-c-work\"></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-25 23:26:01","created_by":1,"updated_at":"2016-09-02 15:07:06","updated_by":1,"published_at":"2016-08-25 23:26:07","published_by":1},{"id":5,"uuid":"b32960e8-cecb-4038-9b6b-f58c481db105","title":"Hello?","slug":"hello","markdown":"<div>\n\n<div class=\"icon-set Mirana\">\n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">PotM Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Mirana\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/545g3122gm7bgrw/PotM_Custom_Icons_0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/545g3122gm7bgrw/PotM_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://blog.sina.com.cn/s/blog_56d6c0c80101l5jz.html\"\n                                                target=\"_blank\">Ji Zhang</a></div>\n    </div>\n</div>\n<div class=\"icon-set Lanaya\">\n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Lanaya Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Lanaya\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/b4p935o7n5dvy43/Lanaya_Custom_Icons_0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/b4p935o7n5dvy43/Lanaya_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/4.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/5.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/6.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/7.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://steamcommunity.com/sharedfiles/filedetails/?id=332982547\"\n                                                target=\"_blank\">Yi</a> and <a\n                href=\"http://dota.joyreactor.cc/post/966589\" target=\"_blank\">A.Spitfire</a></div>\n    </div>\n</div>\n<div class=\"icon-set Pugna\">\n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Pugna Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Pugna\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/rcf6vuzx0d7004v/Pugna_Custom_Icons_0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/rcf6vuzx0d7004v/Pugna_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://mrscrake.deviantart.com/art/Dota-2-Pugna-289973383\"\n                                                target=\"_blank\">MrScrake</a></div>\n    </div>\n</div>\n<div class=\"icon-set Kunkka\">\n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Kunkka Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Kunkka\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/2tidv112aauot3y/Kunkka-Custom-Icons-0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/2tidv112aauot3y/Kunkka-Custom-Icons-0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://mikeazevedo.deviantart.com/art/DOTA-2-KUNKKA-407720534\"\n                                                target=\"_blank\">Mike Azevedo</a> and <a\n                href=\"http://rosolino.deviantart.com/art/Dota2-Kunkka-Fanart-425546582\" target=\"_blank\">Rosolino</a>\n        </div>\n    </div>\n</div>\n<div class=\"icon-set Slark\">\n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Slark Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.2</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Slark\" data-version=\"0-2\">v0.2</div>\n                    <div class=\"option\" data-slug=\"Slark\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/xc6t1xdd43q58xj/Slark_Custom_Icons_0.2.zip\" class=\"download\">Download\n                v0.2</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-2 active\"\n                 data-link=\"http://www.mediafire.com/download/xc6t1xdd43q58xj/Slark_Custom_Icons_0.2.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/4.png');\"></div>\n            </div>\n            <div class=\"version version-0-1\"\n                 data-link=\"http://www.mediafire.com/download/ec9rk3b46ih7xv8/Slark_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://swedeyart.deviantart.com/art/Slark-410729987\"\n                                                target=\"_blank\">SwedeyArt</a></div>\n    </div>\n</div>\n\n<div>\n<style>\nbody {\n  background-color: #000;\n  margin: 0;\n}\n\n#wrapper {\n  margin: 0 auto;\n  width: 960px;\n}\n\n#content {\n  padding: 0;\n}\n\n.display {\n  position: relative;\n  height: 250px;\n}\n.display .front {\n  position: absolute;\n  z-index: 888;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n}\n\n.info {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/background.png\");\n  border-top: solid 1px rgba(255, 255, 255, 0.1);\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\n  font-family: Trebuchet MS;\n  -webkit-box-shadow: #000 0 0 10px;\n  -moz-box-shadow: #000 0 0 10px;\n  box-shadow: #000 0 0 10px;\n  padding: 10px 20px 20px 20px;\n  border-radius: 5px;\n  position: relative;\n  z-index: 999;\n}\n.info .bar {\n  text-align: center;\n}\n.info .name {\n  text-shadow: #000 0 3px 0, #000 0 2px 0, #000 0 1px 0;\n  padding: 10px 10px 0 10px;\n  display: inline-block;\n  letter-spacing: 1px;\n  line-height: 30px;\n  font-size: 20px;\n  height: 30px;\n  color: #eee;\n}\n.info .version-picker, .info .download {\n  -webkit-transition: background-color 400ms ease;\n  -moz-transition: background-color 400ms ease;\n  -o-transition: background-color 400ms ease;\n  transition: background-color 400ms ease;\n  background-color: rgba(0, 0, 0, 0.2);\n  text-decoration: none;\n  display: inline-block;\n  line-height: 40px;\n  padding: 0 15px;\n  margin: 0 10px;\n  height: 40px;\n  color: #ccc;\n}\n.info .version-picker:hover, .info .download:hover {\n  background-color: rgba(0, 0, 0, 0.4);\n}\n.info .version-picker {\n  position: relative;\n  min-width: 35px;\n  cursor: pointer;\n}\n.info .version-picker:hover .options {\n  visibility: visible;\n  opacity: 1;\n}\n.info .version-picker .options {\n  -webkit-transition: opacity 400ms ease;\n  -moz-transition: opacity 400ms ease;\n  -o-transition: opacity 400ms ease;\n  transition: opacity 400ms ease;\n  text-align: center;\n  visibility: hidden;\n  position: absolute;\n  z-index: 888;\n  opacity: 0;\n  top: 100%;\n  left: 0;\n}\n.info .version-picker .options .option {\n  -webkit-transition: background-color 400ms ease;\n  -moz-transition: background-color 400ms ease;\n  -o-transition: background-color 400ms ease;\n  transition: background-color 400ms ease;\n  background-color: rgba(0, 0, 0, 0.4);\n  line-height: 40px;\n  margin: 1px 0 0 0;\n  min-width: 35px;\n  padding: 0 15px;\n  cursor: pointer;\n  height: 40px;\n}\n.info .version-picker .options .option:hover {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.info .artists {\n  text-shadow: #000 0 2px 0, #000 0 1px 0;\n  letter-spacing: 1px;\n  text-align: center;\n  font-size: 16px;\n  color: #888;\n}\n.info .artists a {\n  text-decoration: none;\n  color: #aaa;\n}\n.info .artists a:hover {\n  text-decoration: underline;\n}\n.info .preview {\n  position: relative;\n  padding: 10px 0;\n  height: 148px;\n}\n.info .preview .version {\n  -webkit-transition: opacity 400ms ease;\n  -moz-transition: opacity 400ms ease;\n  -o-transition: opacity 400ms ease;\n  transition: opacity 400ms ease;\n  text-align: center;\n  position: absolute;\n  padding: 10px 0;\n  height: 148px;\n  width: 100%;\n  opacity: 0;\n  left: 0;\n  top: 0;\n}\n.info .preview .version.active {\n  opacity: 1;\n}\n.info .preview .version .icon {\n  -webkit-box-shadow: inset rgba(255, 255, 255, 0.2) 4px 5px 5px -5px, inset rgba(0, 0, 0, 0.6) -4px -5px 5px -5px, #000 0 5px 10px;\n  -moz-box-shadow: inset rgba(255, 255, 255, 0.2) 4px 5px 5px -5px, inset rgba(0, 0, 0, 0.6) -4px -5px 5px -5px, #000 0 5px 10px;\n  box-shadow: inset rgba(255, 255, 255, 0.2) 4px 5px 5px -5px, inset rgba(0, 0, 0, 0.6) -4px -5px 5px -5px, #000 0 5px 10px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  display: inline-block;\n  height: 128px;\n  width: 128px;\n  margin: 10px;\n}\n\n#instructions {\n  font-family: Trebuchet MS;\n  padding: 60px 0 100px 0;\n  color: #ccc;\n}\n#instructions h1 {\n  text-align: center;\n  font-size: 24px;\n}\n#instructions ol {\n  margin: 0 auto;\n  width: 500px;\n}\n#instructions ol li {\n  line-height: 26px;\n  font-size: 16px;\n  margin: 15px 0;\n}\n#instructions code {\n  background-color: #111;\n  display: inline-block;\n  padding: 0px 4px;\n  margin: 2px 2px;\n}\n\n.Mirana .display {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-back.png\");\n}\n.Mirana .display .front {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-front.png\");\n}\n.Mirana .display:before, .Mirana .display:after {\n  background-repeat: repeat-x;\n  background-size: contain;\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 777;\n  content: \"\";\n  width: 100%;\n  top: 0;\n}\n.Mirana .display:before {\n  -webkit-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  -moz-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-clouds-back.png\");\n  -webkit-animation: mirana-front 40s linear 0s infinite;\n  -moz-animation: mirana-front 40s linear 0s infinite;\n  -o-animation: mirana-front 40s linear 0s infinite;\n  animation: mirana-front 40s linear 0s infinite;\n  background-position: 0 -50px;\n}\n.Mirana .display:after {\n  -webkit-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  -moz-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-clouds-front.png\");\n  -webkit-animation: mirana-front 80s linear 0s infinite;\n  -moz-animation: mirana-front 80s linear 0s infinite;\n  -o-animation: mirana-front 80s linear 0s infinite;\n  animation: mirana-front 80s linear 0s infinite;\n  background-position: 0 -50px;\n}\n\n@-o-keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n@-moz-keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n@-webkit-keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n@keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n.Lanaya .display {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-back.png\");\n}\n.Lanaya .display .front {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-front.png\");\n  z-index: 777;\n}\n.Lanaya .display:before, .Lanaya .display:after {\n  background-repeat: no-repeat;\n  background-size: contain;\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 888;\n  content: \"\";\n  width: 100%;\n  top: 0;\n}\n.Lanaya .display:before {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-particles-front.png\");\n  -webkit-animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n  -moz-animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n  -o-animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n  animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n}\n.Lanaya .display:after {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-particles-back.png\");\n  -webkit-animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n  -moz-animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n  -o-animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n  animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n}\n.Lanaya .info .preview {\n  height: 120px;\n}\n.Lanaya .info .preview .version {\n  height: 120px;\n}\n.Lanaya .info .preview .version .icon {\n  height: 100px;\n  width: 100px;\n}\n\n@-o-keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n@-moz-keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n@-webkit-keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n@keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n.Pugna .display {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-back.png\");\n}\n.Pugna .display .front {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-front.png\");\n}\n.Pugna .display:before, .Pugna .display:after {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-dust.png\");\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 777;\n  content: \"\";\n  width: 50%;\n  top: 0;\n}\n.Pugna .display:before {\n  -webkit-animation: pugna-left 14s linear 0s infinite;\n  -moz-animation: pugna-left 14s linear 0s infinite;\n  -o-animation: pugna-left 14s linear 0s infinite;\n  animation: pugna-left 14s linear 0s infinite;\n  -webkit-box-shadow: inset #000 300px 0 250px -100px;\n  -moz-box-shadow: inset #000 300px 0 250px -100px;\n  box-shadow: inset #000 300px 0 250px -100px;\n  left: 0;\n}\n.Pugna .display:after {\n  -webkit-animation: pugna-right 14s linear 0s infinite;\n  -moz-animation: pugna-right 14s linear 0s infinite;\n  -o-animation: pugna-right 14s linear 0s infinite;\n  animation: pugna-right 14s linear 0s infinite;\n  -webkit-box-shadow: inset #000 -300px 0 250px -100px;\n  -moz-box-shadow: inset #000 -300px 0 250px -100px;\n  box-shadow: inset #000 -300px 0 250px -100px;\n  right: 0;\n}\n\n@-o-keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@-moz-keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@-webkit-keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@-o-keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n@-moz-keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n@-webkit-keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n@keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n.Kunkka .display {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-back.png\");\n  overflow: hidden;\n}\n.Kunkka .display .front {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-front.png\");\n}\n.Kunkka .display:before {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-light.png\");\n  -webkit-animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  -moz-animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  -o-animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  position: absolute;\n  display: block;\n  height: 670px;\n  width: 1024px;\n  z-index: 777;\n  content: \"\";\n  top: -200px;\n}\n.Kunkka .display:after {\n  -webkit-box-shadow: inset #000 -350px 0 200px -100px, inset #000 350px 0 200px -100px;\n  -moz-box-shadow: inset #000 -350px 0 200px -100px, inset #000 350px 0 200px -100px;\n  box-shadow: inset #000 -350px 0 200px -100px, inset #000 350px 0 200px -100px;\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 778;\n  content: \"\";\n  width: 100%;\n  top: 0;\n}\n\n@-o-keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n@-moz-keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n@-webkit-keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n@keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n.Slark .display {\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Slark/slark-back.png\");\n}\n.Slark .display .front {\n  -webkit-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  -moz-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  background-image: url(\"http://timbo.kz/images/Dota-2-Icons/Slark/slark-rain.png\");\n  -webkit-animation: slark-front 2s linear 0s infinite;\n  -moz-animation: slark-front 2s linear 0s infinite;\n  -o-animation: slark-front 2s linear 0s infinite;\n  animation: slark-front 2s linear 0s infinite;\n}\n\n@-o-keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n@-moz-keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n@-webkit-keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n@keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n</style>\n</div>\n\n</div>","mobiledoc":null,"html":"<div>\n\n<div class=\"icon-set Mirana\">  \n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">PotM Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Mirana\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/545g3122gm7bgrw/PotM_Custom_Icons_0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/545g3122gm7bgrw/PotM_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Mirana/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://blog.sina.com.cn/s/blog_56d6c0c80101l5jz.html\"\n                                                target=\"_blank\">Ji Zhang</a></div>\n    </div>\n</div>  \n\n<div class=\"icon-set Lanaya\">  \n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Lanaya Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Lanaya\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/b4p935o7n5dvy43/Lanaya_Custom_Icons_0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/b4p935o7n5dvy43/Lanaya_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/4.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/5.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/6.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Lanaya/icons/0.1/7.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://steamcommunity.com/sharedfiles/filedetails/?id=332982547\"\n                                                target=\"_blank\">Yi</a> and <a\n                href=\"http://dota.joyreactor.cc/post/966589\" target=\"_blank\">A.Spitfire</a></div>\n    </div>\n</div>  \n\n<div class=\"icon-set Pugna\">  \n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Pugna Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Pugna\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/rcf6vuzx0d7004v/Pugna_Custom_Icons_0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/rcf6vuzx0d7004v/Pugna_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Pugna/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://mrscrake.deviantart.com/art/Dota-2-Pugna-289973383\"\n                                                target=\"_blank\">MrScrake</a></div>\n    </div>\n</div>  \n\n<div class=\"icon-set Kunkka\">  \n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Kunkka Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.1</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Kunkka\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/2tidv112aauot3y/Kunkka-Custom-Icons-0.1.zip\" class=\"download\">Download\n                v0.1</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-1 active\"\n                 data-link=\"http://www.mediafire.com/download/2tidv112aauot3y/Kunkka-Custom-Icons-0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Kunkka/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://mikeazevedo.deviantart.com/art/DOTA-2-KUNKKA-407720534\"\n                                                target=\"_blank\">Mike Azevedo</a> and <a\n                href=\"http://rosolino.deviantart.com/art/Dota2-Kunkka-Fanart-425546582\" target=\"_blank\">Rosolino</a>\n        </div>\n    </div>\n</div>  \n\n<div class=\"icon-set Slark\">  \n    <div class=\"display\">\n        <div class=\"front\"></div>\n    </div>\n    <div class=\"info\">\n        <div class=\"bar\">\n            <div class=\"name\">Slark Custom Icons</div>\n            <div class=\"version-picker\"><span class=\"current-version\">v0.2</span>\n                <div class=\"options\">\n                    <div class=\"option\" data-slug=\"Slark\" data-version=\"0-2\">v0.2</div>\n                    <div class=\"option\" data-slug=\"Slark\" data-version=\"0-1\">v0.1</div>\n                </div>\n            </div>\n            <a href=\"http://www.mediafire.com/download/xc6t1xdd43q58xj/Slark_Custom_Icons_0.2.zip\" class=\"download\">Download\n                v0.2</a></div>\n        <div class=\"preview\">\n            <div class=\"version version-0-2 active\"\n                 data-link=\"http://www.mediafire.com/download/xc6t1xdd43q58xj/Slark_Custom_Icons_0.2.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.2/4.png');\"></div>\n            </div>\n            <div class=\"version version-0-1\"\n                 data-link=\"http://www.mediafire.com/download/ec9rk3b46ih7xv8/Slark_Custom_Icons_0.1.zip\">\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/1.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/2.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/3.png');\"></div>\n                <div class=\"icon\"\n                     style=\"background-image:url('http://timbo.kz/images/Dota-2-Icons/Slark/icons/0.1/4.png');\"></div>\n            </div>\n        </div>\n        <div class=\"artists\">Original art by <a href=\"http://swedeyart.deviantart.com/art/Slark-410729987\"\n                                                target=\"_blank\">SwedeyArt</a></div>\n    </div>\n</div>\n\n<div>  \n<style>  \nbody {  \n  background-color: #000;\n  margin: 0;\n}\n\n#wrapper {\n  margin: 0 auto;\n  width: 960px;\n}\n\n#content {\n  padding: 0;\n}\n\n.display {\n  position: relative;\n  height: 250px;\n}\n.display .front {\n  position: absolute;\n  z-index: 888;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n}\n\n.info {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/background.png\">http://timbo.kz/images/Dota-2-Icons/background.png</a>\");\n  border-top: solid 1px rgba(255, 255, 255, 0.1);\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\n  font-family: Trebuchet MS;\n  -webkit-box-shadow: #000 0 0 10px;\n  -moz-box-shadow: #000 0 0 10px;\n  box-shadow: #000 0 0 10px;\n  padding: 10px 20px 20px 20px;\n  border-radius: 5px;\n  position: relative;\n  z-index: 999;\n}\n.info .bar {\n  text-align: center;\n}\n.info .name {\n  text-shadow: #000 0 3px 0, #000 0 2px 0, #000 0 1px 0;\n  padding: 10px 10px 0 10px;\n  display: inline-block;\n  letter-spacing: 1px;\n  line-height: 30px;\n  font-size: 20px;\n  height: 30px;\n  color: #eee;\n}\n.info .version-picker, .info .download {\n  -webkit-transition: background-color 400ms ease;\n  -moz-transition: background-color 400ms ease;\n  -o-transition: background-color 400ms ease;\n  transition: background-color 400ms ease;\n  background-color: rgba(0, 0, 0, 0.2);\n  text-decoration: none;\n  display: inline-block;\n  line-height: 40px;\n  padding: 0 15px;\n  margin: 0 10px;\n  height: 40px;\n  color: #ccc;\n}\n.info .version-picker:hover, .info .download:hover {\n  background-color: rgba(0, 0, 0, 0.4);\n}\n.info .version-picker {\n  position: relative;\n  min-width: 35px;\n  cursor: pointer;\n}\n.info .version-picker:hover .options {\n  visibility: visible;\n  opacity: 1;\n}\n.info .version-picker .options {\n  -webkit-transition: opacity 400ms ease;\n  -moz-transition: opacity 400ms ease;\n  -o-transition: opacity 400ms ease;\n  transition: opacity 400ms ease;\n  text-align: center;\n  visibility: hidden;\n  position: absolute;\n  z-index: 888;\n  opacity: 0;\n  top: 100%;\n  left: 0;\n}\n.info .version-picker .options .option {\n  -webkit-transition: background-color 400ms ease;\n  -moz-transition: background-color 400ms ease;\n  -o-transition: background-color 400ms ease;\n  transition: background-color 400ms ease;\n  background-color: rgba(0, 0, 0, 0.4);\n  line-height: 40px;\n  margin: 1px 0 0 0;\n  min-width: 35px;\n  padding: 0 15px;\n  cursor: pointer;\n  height: 40px;\n}\n.info .version-picker .options .option:hover {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.info .artists {\n  text-shadow: #000 0 2px 0, #000 0 1px 0;\n  letter-spacing: 1px;\n  text-align: center;\n  font-size: 16px;\n  color: #888;\n}\n.info .artists a {\n  text-decoration: none;\n  color: #aaa;\n}\n.info .artists a:hover {\n  text-decoration: underline;\n}\n.info .preview {\n  position: relative;\n  padding: 10px 0;\n  height: 148px;\n}\n.info .preview .version {\n  -webkit-transition: opacity 400ms ease;\n  -moz-transition: opacity 400ms ease;\n  -o-transition: opacity 400ms ease;\n  transition: opacity 400ms ease;\n  text-align: center;\n  position: absolute;\n  padding: 10px 0;\n  height: 148px;\n  width: 100%;\n  opacity: 0;\n  left: 0;\n  top: 0;\n}\n.info .preview .version.active {\n  opacity: 1;\n}\n.info .preview .version .icon {\n  -webkit-box-shadow: inset rgba(255, 255, 255, 0.2) 4px 5px 5px -5px, inset rgba(0, 0, 0, 0.6) -4px -5px 5px -5px, #000 0 5px 10px;\n  -moz-box-shadow: inset rgba(255, 255, 255, 0.2) 4px 5px 5px -5px, inset rgba(0, 0, 0, 0.6) -4px -5px 5px -5px, #000 0 5px 10px;\n  box-shadow: inset rgba(255, 255, 255, 0.2) 4px 5px 5px -5px, inset rgba(0, 0, 0, 0.6) -4px -5px 5px -5px, #000 0 5px 10px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  display: inline-block;\n  height: 128px;\n  width: 128px;\n  margin: 10px;\n}\n\n#instructions {\n  font-family: Trebuchet MS;\n  padding: 60px 0 100px 0;\n  color: #ccc;\n}\n#instructions h1 {\n  text-align: center;\n  font-size: 24px;\n}\n#instructions ol {\n  margin: 0 auto;\n  width: 500px;\n}\n#instructions ol li {\n  line-height: 26px;\n  font-size: 16px;\n  margin: 15px 0;\n}\n#instructions code {\n  background-color: #111;\n  display: inline-block;\n  padding: 0px 4px;\n  margin: 2px 2px;\n}\n\n.Mirana .display {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-back.png\">http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-back.png</a>\");\n}\n.Mirana .display .front {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-front.png\">http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-front.png</a>\");\n}\n.Mirana .display:before, .Mirana .display:after {\n  background-repeat: repeat-x;\n  background-size: contain;\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 777;\n  content: \"\";\n  width: 100%;\n  top: 0;\n}\n.Mirana .display:before {\n  -webkit-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  -moz-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-clouds-back.png\">http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-clouds-back.png</a>\");\n  -webkit-animation: mirana-front 40s linear 0s infinite;\n  -moz-animation: mirana-front 40s linear 0s infinite;\n  -o-animation: mirana-front 40s linear 0s infinite;\n  animation: mirana-front 40s linear 0s infinite;\n  background-position: 0 -50px;\n}\n.Mirana .display:after {\n  -webkit-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  -moz-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-clouds-front.png\">http://timbo.kz/images/Dota-2-Icons/Mirana/mirana-clouds-front.png</a>\");\n  -webkit-animation: mirana-front 80s linear 0s infinite;\n  -moz-animation: mirana-front 80s linear 0s infinite;\n  -o-animation: mirana-front 80s linear 0s infinite;\n  animation: mirana-front 80s linear 0s infinite;\n  background-position: 0 -50px;\n}\n\n@-o-keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n@-moz-keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n@-webkit-keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n@keyframes mirana-front {\n  from {\n    background-position: 0 -50px;\n  }\n  to {\n    background-position: 794px -50px;\n  }\n}\n.Lanaya .display {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-back.png\">http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-back.png</a>\");\n}\n.Lanaya .display .front {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-front.png\">http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-front.png</a>\");\n  z-index: 777;\n}\n.Lanaya .display:before, .Lanaya .display:after {\n  background-repeat: no-repeat;\n  background-size: contain;\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 888;\n  content: \"\";\n  width: 100%;\n  top: 0;\n}\n.Lanaya .display:before {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-particles-front.png\">http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-particles-front.png</a>\");\n  -webkit-animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n  -moz-animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n  -o-animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n  animation: lanaya-front 1s ease-in-out 0s infinite alternate;\n}\n.Lanaya .display:after {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-particles-back.png\">http://timbo.kz/images/Dota-2-Icons/Lanaya/lanaya-particles-back.png</a>\");\n  -webkit-animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n  -moz-animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n  -o-animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n  animation: lanaya-front 2s ease-in-out 0s infinite alternate;\n}\n.Lanaya .info .preview {\n  height: 120px;\n}\n.Lanaya .info .preview .version {\n  height: 120px;\n}\n.Lanaya .info .preview .version .icon {\n  height: 100px;\n  width: 100px;\n}\n\n@-o-keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n@-moz-keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n@-webkit-keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n@keyframes lanaya-front {\n  from {\n    background-position: 0 -2px;\n  }\n  to {\n    background-position: 0 6px;\n  }\n}\n.Pugna .display {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-back.png\">http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-back.png</a>\");\n}\n.Pugna .display .front {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-front.png\">http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-front.png</a>\");\n}\n.Pugna .display:before, .Pugna .display:after {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-dust.png\">http://timbo.kz/images/Dota-2-Icons/Pugna/pugna-dust.png</a>\");\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 777;\n  content: \"\";\n  width: 50%;\n  top: 0;\n}\n.Pugna .display:before {\n  -webkit-animation: pugna-left 14s linear 0s infinite;\n  -moz-animation: pugna-left 14s linear 0s infinite;\n  -o-animation: pugna-left 14s linear 0s infinite;\n  animation: pugna-left 14s linear 0s infinite;\n  -webkit-box-shadow: inset #000 300px 0 250px -100px;\n  -moz-box-shadow: inset #000 300px 0 250px -100px;\n  box-shadow: inset #000 300px 0 250px -100px;\n  left: 0;\n}\n.Pugna .display:after {\n  -webkit-animation: pugna-right 14s linear 0s infinite;\n  -moz-animation: pugna-right 14s linear 0s infinite;\n  -o-animation: pugna-right 14s linear 0s infinite;\n  animation: pugna-right 14s linear 0s infinite;\n  -webkit-box-shadow: inset #000 -300px 0 250px -100px;\n  -moz-box-shadow: inset #000 -300px 0 250px -100px;\n  box-shadow: inset #000 -300px 0 250px -100px;\n  right: 0;\n}\n\n@-o-keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@-moz-keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@-webkit-keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@keyframes pugna-left {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -250px 0;\n  }\n}\n@-o-keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n@-moz-keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n@-webkit-keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n@keyframes pugna-right {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 250px 0;\n  }\n}\n.Kunkka .display {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-back.png\">http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-back.png</a>\");\n  overflow: hidden;\n}\n.Kunkka .display .front {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-front.png\">http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-front.png</a>\");\n}\n.Kunkka .display:before {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-light.png\">http://timbo.kz/images/Dota-2-Icons/Kunkka/kunkka-light.png</a>\");\n  -webkit-animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  -moz-animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  -o-animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  animation: kunkka-front 5s ease-in-out 0s infinite alternate;\n  position: absolute;\n  display: block;\n  height: 670px;\n  width: 1024px;\n  z-index: 777;\n  content: \"\";\n  top: -200px;\n}\n.Kunkka .display:after {\n  -webkit-box-shadow: inset #000 -350px 0 200px -100px, inset #000 350px 0 200px -100px;\n  -moz-box-shadow: inset #000 -350px 0 200px -100px, inset #000 350px 0 200px -100px;\n  box-shadow: inset #000 -350px 0 200px -100px, inset #000 350px 0 200px -100px;\n  position: absolute;\n  display: block;\n  height: 250px;\n  z-index: 778;\n  content: \"\";\n  width: 100%;\n  top: 0;\n}\n\n@-o-keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n@-moz-keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n@-webkit-keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n@keyframes kunkka-front {\n  from {\n    -webkit-transform: rotateZ(-10deg);\n    -ms-transform: rotateZ(-10deg);\n    transform: rotateZ(-10deg);\n  }\n  to {\n    -webkit-transform: rotateZ(10deg);\n    -ms-transform: rotateZ(10deg);\n    transform: rotateZ(10deg);\n  }\n}\n.Slark .display {\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Slark/slark-back.png\">http://timbo.kz/images/Dota-2-Icons/Slark/slark-back.png</a>\");\n}\n.Slark .display .front {\n  -webkit-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  -moz-box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  box-shadow: inset #000 -200px 0 250px -100px, inset #000 200px 0 250px -100px;\n  background-image: url(\"<a href=\"http://timbo.kz/images/Dota-2-Icons/Slark/slark-rain.png\">http://timbo.kz/images/Dota-2-Icons/Slark/slark-rain.png</a>\");\n  -webkit-animation: slark-front 2s linear 0s infinite;\n  -moz-animation: slark-front 2s linear 0s infinite;\n  -o-animation: slark-front 2s linear 0s infinite;\n  animation: slark-front 2s linear 0s infinite;\n}\n\n@-o-keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n@-moz-keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n@-webkit-keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n@keyframes slark-front {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: -400px 400px;\n  }\n}\n</style>  \n</div>\n\n<p></div></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 18:51:47","created_by":1,"updated_at":"2016-09-01 21:30:49","updated_by":1,"published_at":"2016-08-27 18:51:53","published_by":1},{"id":6,"uuid":"77d5af3f-8484-477c-82ab-4eaede7d1e78","title":"Some post!","slug":"some-post","markdown":"# Abstract\n\nIt's not a secret that for almost all people attempting to learn C pointers are a grey area. I personally was struggling quite a lot understanding them but I was saved by a huge amount of amazing guides on pointer usage you can find online. That said, I still feel like implementation of higher order functions in C deserves more exposure that it currently has and this article is my attempt to contribute to this cause.\n\n> **Note:** In this article I'm gonna assume that you have some experience with C and know what pointers are. Additionally, I will assume you know how to write and compile `.c` files.\n\n# What are higher order functions?\n\n[Higher order functions](https://en.wikipedia.org/wiki/Higher-order_function) take other functions as their arguments or return new functions when they terminate. It might sound confusing especially if you've never seen it being done before but in reality it is really quite simple. Consider the pseudocode below:\n\n```language-lua\nreverse(string)\n    -- Some code to reverse the string\n    return string\n\nuppercase(string)\n    -- Some code to convert string to uppercase\n    return string\n\napply(string, operation)\n    return operation(string)\n\nhello := \"hello\"\n\n-- Reverse the string\nhello := apply(hello, reverse)\n\n-- Convert the string to uppercase\nhello := apply(hello, uppercase)\n```\n\nTo summarise: `apply()` function above takes 2 parameters: a string and an another function. Then, as the name implies, it applies the `operation` to the supplied `string` and returns whatever comes out. This results in a very interesting form of [polymorphism](https://en.wikipedia.org/wiki/Polymorphism_(computer_science)): our `apply()` function can take any `operation` regardless of what it does as long as it accepts a string as an argument and returns the string afterwards.\n\nThe example above looks at the scenario when a function takes other functions as its arguments. Now let's take a look at functions that return new functions:\n\n```language-lua\nmultiplyOperation(coefficient)\n    -- Declare new function that multiplies the\n    -- supplied argument by the coefficient\n    operation(number)\n        return number * coefficient\n    -- Return the new function\n    return operation\n\n-- Function that multiplies everything by 5\nmultiplyBy5 := multiplyOperation(5)\n\n-- This will return 35\nmultipleBy5(7)\n```\n\nAs seen above, `multiplyOperation()` returns a new function that changes its behaviour depending on what value for the `coefficient` has been supplied to `multiplyOperation()`. Keep in mind that the examples above are just pseudocode to give you an idea of what higher order functions are about and C implementation will not necessarily look the same.\n\n# Function pointers in C\n\nTo achieve the functionality discussed in the previous section we're gonna use function pointers, which are pretty straightforward and shouldn't take you too long to wrap your head around. Before we start, remind yourself of these 2 things:\n\n* You can get the address of a variable using the `&` operator, like so: <code class=\"language-c\">int *a = &b;</code> (`a` can now be used as a pointer to `b`). That said, when referencing a function you are allowed to drop the `&` operator. If you still don't have that much experience with pointers, I recommend leaving it in.\n* Before you can access the variable a pointer is pointing to, you must dereference said pointer. Let's take integer pointer `a` from the line above - if I want to use it in a calculation, I need to dereference it using the `*` operator: <code class=\"language-c\">int c = 3 + *a;</code>.\n\n```language-c\n// The function we'll be pointing to\nint halve(int number) {\n    return number / 2;\n}\n\nvoid main() {\n    // Declare a pointer to the `halve` function\n    // We say that operation takes 1 int argument\n    // and returns an int when it terminates\n    int (*operation)(int) = &halve;\n\n    // Alternatively, you can drop the `&`:\n    int (*anotherOperation)(int) = halve;\n    // From here on onwards, I will always\n    // drop the `&` to make the code a bit\n    // more concise\n\n    // Dereference the pointer to `halve` first,\n    // then supply relevant arguments to it\n    int halved = (*operation)(10);\n\n    // Should print `5`, try it yourself\n    printf(\"%d\", halved);\n}\n```\n\nAs you can see in the beginning of the `main()` method, pointers to functions have a rather unusual type declaration. It consists of 3 parts:\n\n1. The type before the parenthesis is the return type of the function the pointer is referencing. \n2. The middle part, is the name of the pointer. Note that you have to wrap it into parenthesis to indicate that this a pointer to a function.\n3. The last part contains the types of parameters the function is expecting.\n\nFor example, the type for a pointer to a function that accepts 2 character arrays and returns a double would look as follows: <code class=\"language-c\">double (\\*someFunction)(char\\*, char\\*)</code>. It is possible to go much deeper and, in fact, I'll show you an example in the end of this article.\n\n# Implementing the `map()` function\n\nAs an exercise, let's implement the [infamous `map()` function](https://en.wikipedia.org/wiki/Map_(higher-order_function)). This function takes 2 arguments:\n\n1. Some [unary function](https://en.wikipedia.org/wiki/Unary_function) that accepts an argument of type `A` and returns some value of type `B`.\n2. An array of type `A`. Keep in mind, type `A` can be the same as type `B`.\n\nThe return value is a new array of type `B`. This new array is generated by applying the supplied unary function to every element in the supplied array of type `A`.\n\n## `map()` for integers\n\nWe'll begin by implementing a map function that only works with integers to make it easier for ourselves.\n\n```language-c\n#include <stdio.h>\n#include <stdlib.h>\n\n// Multiply a number by 3\nint triple(int number) {\n    return number * 3;\n}\n\nint* map(int (*function)(int), int* array, int length) {\n    // Allocate memory for our new array\n    int* newArray = malloc(sizeof(int) * length);\n    int i;\n    // Apply the function to every element of the supplied\n    // array and save the values into the new array\n    for(i = 0; i < length; i++) {\n        newArray[i] = function(array[i]);\n    }\n    // Return the pointer to the new array\n    // (you must `free()` the memory afterwards)\n    return newArray;\n}\n\nvoid main() {\n    // Initial array of length 4\n    int array[4] = { 1, 2, 3, 4 };\n    // Map the array above using the `triple()` function\n    int* tripledArray = map(triple, array, 4);\n    int i;\n    // Print the new values\n    for(i = 0; i < 4; i++) {\n        printf(\"%d \", tripledArray[i]);\n    }\n    // Don't forget to the free the memory afterwards\n    free(tripledArray);\n}\n```\n\n## Polymorhpic map\n\n# We need to go deeper\n\n[](http://stackoverflow.com/questions/840501/how-do-function-pointers-in-c-work)","mobiledoc":null,"html":"<h1 id=\"abstract\">Abstract</h1>\n\n<p>It's not a secret that for almost all people attempting to learn C pointers are a grey area. I personally was struggling quite a lot understanding them but I was saved by a huge amount of amazing guides on pointer usage you can find online. That said, I still feel like implementation of higher order functions in C deserves more exposure that it currently has and this article is my attempt to contribute to this cause.</p>\n\n<blockquote>\n  <p><strong>Note:</strong> In this article I'm gonna assume that you have some experience with C and know what pointers are. Additionally, I will assume you know how to write and compile <code>.c</code> files.</p>\n</blockquote>\n\n<h1 id=\"whatarehigherorderfunctions\">What are higher order functions?</h1>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Higher-order_function\">Higher order functions</a> take other functions as their arguments or return new functions when they terminate. It might sound confusing especially if you've never seen it being done before but in reality it is really quite simple. Consider the pseudocode below:</p>\n\n<pre><code class=\"language-lua\">reverse(string)  \n    -- Some code to reverse the string\n    return string\n\nuppercase(string)  \n    -- Some code to convert string to uppercase\n    return string\n\napply(string, operation)  \n    return operation(string)\n\nhello := \"hello\"\n\n-- Reverse the string\nhello := apply(hello, reverse)\n\n-- Convert the string to uppercase\nhello := apply(hello, uppercase)  \n</code></pre>\n\n<p>To summarise: <code>apply()</code> function above takes 2 parameters: a string and an another function. Then, as the name implies, it applies the <code>operation</code> to the supplied <code>string</code> and returns whatever comes out. This results in a very interesting form of <a href=\"https://en.wikipedia.org/wiki/Polymorphism_(computer_science)\">polymorphism</a>: our <code>apply()</code> function can take any <code>operation</code> regardless of what it does as long as it accepts a string as an argument and returns the string afterwards.</p>\n\n<p>The example above looks at the scenario when a function takes other functions as its arguments. Now let's take a look at functions that return new functions:</p>\n\n<pre><code class=\"language-lua\">multiplyOperation(coefficient)  \n    -- Declare new function that multiplies the\n    -- supplied argument by the coefficient\n    operation(number)\n        return number * coefficient\n    -- Return the new function\n    return operation\n\n-- Function that multiplies everything by 5\nmultiplyBy5 := multiplyOperation(5)\n\n-- This will return 35\nmultipleBy5(7)  \n</code></pre>\n\n<p>As seen above, <code>multiplyOperation()</code> returns a new function that changes its behaviour depending on what value for the <code>coefficient</code> has been supplied to <code>multiplyOperation()</code>. Keep in mind that the examples above are just pseudocode to give you an idea of what higher order functions are about and C implementation will not necessarily look the same.</p>\n\n<h1 id=\"functionpointersinc\">Function pointers in C</h1>\n\n<p>To achieve the functionality discussed in the previous section we're gonna use function pointers, which are pretty straightforward and shouldn't take you too long to wrap your head around. Before we start, remind yourself of these 2 things:</p>\n\n<ul>\n<li>You can get the address of a variable using the <code>&amp;</code> operator, like so: <code class=\"language-c\">int *a = &b;</code> (<code>a</code> can now be used as a pointer to <code>b</code>). That said, when referencing a function you are allowed to drop the <code>&amp;</code> operator. If you still don't have that much experience with pointers, I recommend leaving it in.</li>\n<li>Before you can access the variable a pointer is pointing to, you must dereference said pointer. Let's take integer pointer <code>a</code> from the line above - if I want to use it in a calculation, I need to dereference it using the <code>*</code> operator: <code class=\"language-c\">int c = 3 + *a;</code>.</li>\n</ul>\n\n<pre><code class=\"language-c\">// The function we'll be pointing to\nint halve(int number) {  \n    return number / 2;\n}\n\nvoid main() {  \n    // Declare a pointer to the `halve` function\n    // We say that operation takes 1 int argument\n    // and returns an int when it terminates\n    int (*operation)(int) = &amp;halve;\n\n    // Alternatively, you can drop the `&amp;`:\n    int (*anotherOperation)(int) = halve;\n    // From here on onwards, I will always\n    // drop the `&amp;` to make the code a bit\n    // more concise\n\n    // Dereference the pointer to `halve` first,\n    // then supply relevant arguments to it\n    int halved = (*operation)(10);\n\n    // Should print `5`, try it yourself\n    printf(\"%d\", halved);\n}\n</code></pre>\n\n<p>As you can see in the beginning of the <code>main()</code> method, pointers to functions have a rather unusual type declaration. It consists of 3 parts:</p>\n\n<ol>\n<li>The type before the parenthesis is the return type of the function the pointer is referencing.  </li>\n<li>The middle part, is the name of the pointer. Note that you have to wrap it into parenthesis to indicate that this a pointer to a function.  </li>\n<li>The last part contains the types of parameters the function is expecting.</li>\n</ol>\n\n<p>For example, the type for a pointer to a function that accepts 2 character arrays and returns a double would look as follows: <code class=\"language-c\">double (*someFunction)(char*, char*)</code>. It is possible to go much deeper and, in fact, I'll show you an example in the end of this article.</p>\n\n<h1 id=\"implementingthemapfunction\">Implementing the <code>map()</code> function</h1>\n\n<p>As an exercise, let's implement the <a href=\"https://en.wikipedia.org/wiki/Map_(higher-order_function)\">infamous <code>map()</code> function</a>. This function takes 2 arguments:</p>\n\n<ol>\n<li>Some <a href=\"https://en.wikipedia.org/wiki/Unary_function\">unary function</a> that accepts an argument of type <code>A</code> and returns some value of type <code>B</code>.  </li>\n<li>An array of type <code>A</code>. Keep in mind, type <code>A</code> can be the same as type <code>B</code>.</li>\n</ol>\n\n<p>The return value is a new array of type <code>B</code>. This new array is generated by applying the supplied unary function to every element in the supplied array of type <code>A</code>.</p>\n\n<h2 id=\"mapforintegers\"><code>map()</code> for integers</h2>\n\n<p>We'll begin by implementing a map function that only works with integers to make it easier for ourselves.</p>\n\n<pre><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// Multiply a number by 3\nint triple(int number) {  \n    return number * 3;\n}\n\nint* map(int (*function)(int), int* array, int length) {  \n    // Allocate memory for our new array\n    int* newArray = malloc(sizeof(int) * length);\n    int i;\n    // Apply the function to every element of the supplied\n    // array and save the values into the new array\n    for(i = 0; i &lt; length; i++) {\n        newArray[i] = function(array[i]);\n    }\n    // Return the pointer to the new array\n    // (you must `free()` the memory afterwards)\n    return newArray;\n}\n\nvoid main() {  \n    // Initial array of length 4\n    int array[4] = { 1, 2, 3, 4 };\n    // Map the array above using the `triple()` function\n    int* tripledArray = map(triple, array, 4);\n    int i;\n    // Print the new values\n    for(i = 0; i &lt; 4; i++) {\n        printf(\"%d \", tripledArray[i]);\n    }\n    // Don't forget to the free the memory afterwards\n    free(tripledArray);\n}\n</code></pre>\n\n<h2 id=\"polymorhpicmap\">Polymorhpic map</h2>\n\n<h1 id=\"weneedtogodeeper\">We need to go deeper</h1>\n\n<p><a href=\"http://stackoverflow.com/questions/840501/how-do-function-pointers-in-c-work\"></a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 18:52:32","created_by":1,"updated_at":"2016-09-02 13:01:57","updated_by":1,"published_at":"2016-08-27 18:52:35","published_by":1},{"id":7,"uuid":"4ba6e0a6-920d-4346-857f-6c8c551627ea","title":"Testy Test","slug":"testy-test","markdown":"# Abstract\n\nSynlighter is a simple syntax highlighting plugin I developed a while ago. I used it primarily as an exercise to study regular expressions, so it is still far from being called a complete product and it only supports HTML, CSS and JS highlighting. Sadly, I'm no longer developing it so don't expect any updates in the future.\n\n# Demo and source code\n\nYou can find the source code on Synlighter's [GitHub page](https://github.com/TimboKZ/Synlighter). Below is a quick demo of its functionality. As said above, it was never meant to be ready for production so I apologise if it doesn't display correctly in your browser.\n\n# Highlighting CSS\n\n<div>\n<xmp class=\"synlighter\" data-language=\"css\">\n/*\n *    Syntax  ->  Code\n */\n\n.synlighter-syntax-code {\n    -webkit-box-sizing: border-box;\n     -khtml-box-sizing: border-box;\n       -moz-box-sizing: border-box;\n        -ms-box-sizing: border-box;\n         -o-box-sizing: border-box;\n            box-sizing: border-box;\n}\n.doodle input:checked ~ .animate {\n    /* We will set a delay so that the rewind effect can occur */    \n    -webkit-animation: horse-ride .5s steps(12, end) infinite 5s;\n       -moz-animation: horse-ride .5s steps(12, end) infinite 5s;\n    animation: horse-ride .5s steps(12, end) infinite 5s;\n\n    /* Imitating the Rewind effect before real animation starts */\n    -webkit-transition: all 5s cubic-bezier(0.550, 0.055, 0.675, 0.190);\n       -moz-transition: all 5s cubic-bezier(0.550, 0.055, 0.675, 0.190);\n            transition: all 5s cubic-bezier(0.550, 0.055, 0.675, 0.190);\n    background-position: -2412px 0;\n}\n.doodle div.g:after {\n    background: rgba(53, 97, 182, 0.5);\n}\n</xmp>\n\n<link href=\"https://cdn.rawgit.com/TimboKZ/Synlighter/master/synlighter/synlighter.css\" rel=\"stylesheet\" type=\"text/css\">\n<script>\nwindow.scripts.push('https://cdn.rawgit.com/TimboKZ/Synlighter/master/synlighter/jquery.synlighter.js');\nwindow.scripts.push(function($) {\n  $(document).ready(function(e) {\n    $('.synlighter').synlighter();\n    $('.synlighter-alt').synlighter({ counter: 'alt' });\n  });\n}); \n</script>\n</div>","mobiledoc":null,"html":"<h1 id=\"abstract\">Abstract</h1>\n\n<p>Synlighter is a simple syntax highlighting plugin I developed a while ago. I used it primarily as an exercise to study regular expressions, so it is still far from being called a complete product and it only supports HTML, CSS and JS highlighting. Sadly, I'm no longer developing it so don't expect any updates in the future.</p>\n\n<h1 id=\"demoandsourcecode\">Demo and source code</h1>\n\n<p>You can find the source code on Synlighter's <a href=\"https://github.com/TimboKZ/Synlighter\">GitHub page</a>. Below is a quick demo of its functionality. As said above, it was never meant to be ready for production so I apologise if it doesn't display correctly in your browser.</p>\n\n<h1 id=\"highlightingcss\">Highlighting CSS</h1>\n\n<div>  \n<xmp class=\"synlighter\" data-language=\"css\">  \n/*\n *    Syntax  ->  Code\n */\n\n.synlighter-syntax-code {\n    -webkit-box-sizing: border-box;\n     -khtml-box-sizing: border-box;\n       -moz-box-sizing: border-box;\n        -ms-box-sizing: border-box;\n         -o-box-sizing: border-box;\n            box-sizing: border-box;\n}\n.doodle input:checked ~ .animate {\n    /* We will set a delay so that the rewind effect can occur */    \n    -webkit-animation: horse-ride .5s steps(12, end) infinite 5s;\n       -moz-animation: horse-ride .5s steps(12, end) infinite 5s;\n    animation: horse-ride .5s steps(12, end) infinite 5s;\n\n    /* Imitating the Rewind effect before real animation starts */\n    -webkit-transition: all 5s cubic-bezier(0.550, 0.055, 0.675, 0.190);\n       -moz-transition: all 5s cubic-bezier(0.550, 0.055, 0.675, 0.190);\n            transition: all 5s cubic-bezier(0.550, 0.055, 0.675, 0.190);\n    background-position: -2412px 0;\n}\n.doodle div.g:after {\n    background: rgba(53, 97, 182, 0.5);\n}\n</xmp>\n\n<link href=\"https://cdn.rawgit.com/TimboKZ/Synlighter/master/synlighter/synlighter.css\" rel=\"stylesheet\" type=\"text/css\">  \n<script>  \nwindow.scripts.push('https://cdn.rawgit.com/TimboKZ/Synlighter/master/synlighter/jquery.synlighter.js');  \nwindow.scripts.push(function($) {  \n  $(document).ready(function(e) {\n    $('.synlighter').synlighter();\n    $('.synlighter-alt').synlighter({ counter: 'alt' });\n  });\n}); \n</script>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 19:08:06","created_by":1,"updated_at":"2016-08-30 15:49:59","updated_by":1,"published_at":"2016-08-27 19:08:16","published_by":1},{"id":8,"uuid":"d2d4ddaa-e60d-4846-a2d9-1b96f1450517","title":"Some Other Test","slug":"some-other-test","markdown":"# Abstract\n\nIn the recent years, two-way data binding has become a very popular technique among all sorts of JavaScript frameworks and other tools, and I felt like an article about the basic concepts behind it might be useful for someone who wishes to understand how exactly two-way data binding works. In this article, I'll try to cover as much of it as possible without going too deep into the mechanics of JavaScript.\n\n# What is two-way data binding?\n\nFirst of all, it is important to point out what exactly two-way data binding is before we can discuss how it works. As an example, let's consider [Model-View-Controller (MVC) design pattern](https://en.wikipedia.org/wiki/Model-view-controller). In MVC, so-called Model component represents the Model of the data in the application, while the View component determines how the data is presented to the viewer. A simple analogy would be to think of the Model as a JavaScript object and the View as an HTML page with some input forms. Take a look at the animation below.\n\n<video loop=\"\" autoplay=\"\">\n    <source src=\"https://s3.eu-central-1.amazonaws.com/foxypanda-ghost/2016/Aug/two-way-data-binding.webm\" type=\"video/webm\">\n    Your browser does not support the video tag.\n</video>\n\nAs you can see, the JavaScript object gets updated in real time as the user changes the contents of the input field. Since this is **two-way** data binding, the opposite is also true: If the application was to update the JS object the changes would appear in the input field straight away.\n\n# JavaScript implementation\n\nFirst of all, let's make a simple HTML page which we'll use to test any JS code we'll write. The code for our page can be found below and it has 3 noteworthy elements:\n\n1. `#input` field: The input field we'll use to type in new values for the JS variable. As per the concept of two-way data binding, the changes made here will affect the JS variable and vice versa.\n2. `#change` button: On click, this button will change the value of the JS variable to `Hello`. This change should also affect the `#input` and the `#value`.\n3. `#value` \n\n```language-markup line-numbers\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Two-way Data Binding</title>\n</head>\n<body>\n    <input id=\"input\" type=\"text\">\n    <button id=\"change\">Set value to \"Hello\"</button>\n    <span>Value: <strong id=\"value\"></strong></span>\n\n    <script>\n    /*\n     * Our JS will go here\n     */\n    </script>\n</body>\n</html>\n```","mobiledoc":null,"html":"<h1 id=\"abstract\">Abstract</h1>\n\n<p>In the recent years, two-way data binding has become a very popular technique among all sorts of JavaScript frameworks and other tools, and I felt like an article about the basic concepts behind it might be useful for someone who wishes to understand how exactly two-way data binding works. In this article, I'll try to cover as much of it as possible without going too deep into the mechanics of JavaScript.</p>\n\n<h1 id=\"whatistwowaydatabinding\">What is two-way data binding?</h1>\n\n<p>First of all, it is important to point out what exactly two-way data binding is before we can discuss how it works. As an example, let's consider <a href=\"https://en.wikipedia.org/wiki/Model-view-controller\">Model-View-Controller (MVC) design pattern</a>. In MVC, so-called Model component represents the Model of the data in the application, while the View component determines how the data is presented to the viewer. A simple analogy would be to think of the Model as a JavaScript object and the View as an HTML page with some input forms. Take a look at the animation below.</p>\n\n<video loop=\"\" autoplay=\"\">  \n    <source src=\"https://s3.eu-central-1.amazonaws.com/foxypanda-ghost/2016/Aug/two-way-data-binding.webm\" type=\"video/webm\">\n    Your browser does not support the video tag.\n</video>\n\n<p>As you can see, the JavaScript object gets updated in real time as the user changes the contents of the input field. Since this is <strong>two-way</strong> data binding, the opposite is also true: If the application was to update the JS object the changes would appear in the input field straight away.</p>\n\n<h1 id=\"javascriptimplementation\">JavaScript implementation</h1>\n\n<p>First of all, let's make a simple HTML page which we'll use to test any JS code we'll write. The code for our page can be found below and it has 3 noteworthy elements:</p>\n\n<ol>\n<li><code>#input</code> field: The input field we'll use to type in new values for the JS variable. As per the concept of two-way data binding, the changes made here will affect the JS variable and vice versa.  </li>\n<li><code>#change</code> button: On click, this button will change the value of the JS variable to <code>Hello</code>. This change should also affect the <code>#input</code> and the <code>#value</code>.  </li>\n<li><code>#value</code> </li>\n</ol>\n\n<pre><code class=\"language-markup line-numbers\">&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;head&gt;  \n    &lt;title&gt;Two-way Data Binding&lt;/title&gt;\n&lt;/head&gt;  \n&lt;body&gt;  \n    &lt;input id=\"input\" type=\"text\"&gt;\n    &lt;button id=\"change\"&gt;Set value to \"Hello\"&lt;/button&gt;\n    &lt;span&gt;Value: &lt;strong id=\"value\"&gt;&lt;/strong&gt;&lt;/span&gt;\n\n    &lt;script&gt;\n    /*\n     * Our JS will go here\n     */\n    &lt;/script&gt;\n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 19:08:32","created_by":1,"updated_at":"2016-08-28 20:00:56","updated_by":1,"published_at":"2016-08-27 19:08:41","published_by":1},{"id":9,"uuid":"13c9e9c4-a08b-4643-8c29-b141d0ee5e44","title":"Some reasonably long title that doesn't bear any particular meaning","slug":"some-reasonably-long-title-that-doesnt-bear-any-particular-meaning","markdown":"```language-typescript line-numbers\n/**\n * An interface used for configuration of the layer\n * @since 0.1.1 Added `degree` parameter\n * @since 0.0.6 Renamed `generateCoefficient` to `coefficientGenerator`\n * @since 0.0.5\n */\nexport interface ILayerConfiguration {\n    neuronType: INeuronTypeParameter;\n    coefficientGenerator: () => number;\n    neuronCount?: number;\n    degree?: number;\n}\n```\n\n<video loop=\"\" autoplay=\"\">\n    <source src=\"https://s3.eu-central-1.amazonaws.com/foxypanda-ghost/2016/Aug/two-way-data-binding.webm\" type=\"video/webm\">\n    Your browser does not support the video tag.\n</video>","mobiledoc":null,"html":"<pre><code class=\"language-typescript line-numbers\">/**\n * An interface used for configuration of the layer\n * @since 0.1.1 Added `degree` parameter\n * @since 0.0.6 Renamed `generateCoefficient` to `coefficientGenerator`\n * @since 0.0.5\n */\nexport interface ILayerConfiguration {  \n    neuronType: INeuronTypeParameter;\n    coefficientGenerator: () =&gt; number;\n    neuronCount?: number;\n    degree?: number;\n}\n</code></pre>\n\n<video loop=\"\" autoplay=\"\">  \n    <source src=\"https://s3.eu-central-1.amazonaws.com/foxypanda-ghost/2016/Aug/two-way-data-binding.webm\" type=\"video/webm\">\n    Your browser does not support the video tag.\n</video>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 19:13:53","created_by":1,"updated_at":"2016-08-28 19:14:05","updated_by":1,"published_at":"2016-08-27 19:14:04","published_by":1},{"id":10,"uuid":"ccc0ce9c-51be-4af5-a09c-a406e8a83868","title":"Short Title","slug":"short-title","markdown":"# A quick overview\n\nHyperBlocks is a WYSIWYG editor for sidebar content on Reddit. Its main aim is to allow moderators to easily organise the contents of sidebars in their subreddits in a neat and well-structured way without any prior knowledge of CSS or Markdown syntax. You find a video of HyperBlocks editor in action at the bottom of this page.\n\nYou can find the live demo of the editor [here](http://timbo.kz/reddit/HyperBlocks/). The source code is available on HyperBlocks' [GitHub page](https://github.com/TimboKZ/HyperBlocks). To see some discussions related to the editor you might wanna check out [this Reddit thread](https://www.reddit.com/r/reddithax/comments/30k58l/hyperblocks_editor_is_now_available_for_testing/) and [/r/HyperBlocks](https://www.reddit.com/r/HyperBlocks).\n\n<div class=\"video\"><iframe src=\"https://www.youtube.com/embed/xedUxaGOUXw\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>","mobiledoc":null,"html":"<h1 id=\"aquickoverview\">A quick overview</h1>\n\n<p>HyperBlocks is a WYSIWYG editor for sidebar content on Reddit. Its main aim is to allow moderators to easily organise the contents of sidebars in their subreddits in a neat and well-structured way without any prior knowledge of CSS or Markdown syntax. You find a video of HyperBlocks editor in action at the bottom of this page.</p>\n\n<p>You can find the live demo of the editor <a href=\"http://timbo.kz/reddit/HyperBlocks/\">here</a>. The source code is available on HyperBlocks' <a href=\"https://github.com/TimboKZ/HyperBlocks\">GitHub page</a>. To see some discussions related to the editor you might wanna check out <a href=\"https://www.reddit.com/r/reddithax/comments/30k58l/hyperblocks_editor_is_now_available_for_testing/\">this Reddit thread</a> and <a href=\"https://www.reddit.com/r/HyperBlocks\">/r/HyperBlocks</a>.</p>\n\n<div class=\"video\"><iframe src=\"https://www.youtube.com/embed/xedUxaGOUXw\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 19:50:29","created_by":1,"updated_at":"2016-08-28 03:42:58","updated_by":1,"published_at":"2016-08-27 19:50:37","published_by":1},{"id":11,"uuid":"34522e13-a813-4b51-9cbc-87d7b7c48e11","title":"About","slug":"about","markdown":"","mobiledoc":null,"html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-08-27 20:47:40","created_by":1,"updated_at":"2016-08-27 20:47:48","updated_by":1,"published_at":"2016-08-27 20:47:48","published_by":1}],"users":[{"id":1,"uuid":"382b24f0-33a7-43b5-bcc0-f0f991b7b24d","name":"Timur Kuzhagaliyev","slug":"tim","password":"$2a$10$FQVAmqqJmIY6oP45obmQuu4jS9qzE6ZnK6oDJU3gdBW93HCUDgvIu","email":"tim.kuzh@gmail.com","image":"/content/images/2016/08/Tim-cropped.jpg","cover":null,"bio":"Why hello there, I'm Tim and I study MEng Computer Science in UCL. Check out my <a href=\"https://github.com/TimboKZ\">GitHub</a> to see what I'm up to.","website":"https://foxypanda.me","location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_login":"2016-09-02 15:05:18","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-09-02 15:05:18","updated_by":1}],"roles":[{"id":1,"uuid":"959a3062-73fb-438c-b9bd-ba9d8d644898","name":"Administrator","description":"Administrators","created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1},{"id":2,"uuid":"ce34e6cb-6eaf-4287-b579-88ab6279371b","name":"Editor","description":"Editors","created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1},{"id":3,"uuid":"54f10689-7d58-40e7-95b0-43092b1fe091","name":"Author","description":"Authors","created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1},{"id":4,"uuid":"593518a4-0a5c-4bb5-895f-781aefb80685","name":"Owner","description":"Blog Owner","created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"permissions":[{"id":1,"uuid":"78e7c2e3-a218-421f-a668-93b51186c88e","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1},{"id":2,"uuid":"6fee3a33-818a-43dc-82b4-eaa64769db2d","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1},{"id":3,"uuid":"29ba01b9-ed7d-44a2-82ac-bba346cbe6ac","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2016-08-25 22:49:25","created_by":1,"updated_at":"2016-08-25 22:49:25","updated_by":1},{"id":4,"uuid":"d2ac6052-8cd9-4b8c-b2b9-500aad9bcefe","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":5,"uuid":"e63c05a9-a6c8-47a0-86ff-4fc2fecd8700","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":6,"uuid":"84506e0b-bded-4d64-8186-fe5362710360","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":7,"uuid":"253d4243-c7e7-4dbc-ac6f-c1ef349bcc46","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":8,"uuid":"64056997-9e5c-426a-b62b-aae162d80ec4","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":9,"uuid":"c22e2be9-ca7b-42af-839a-65aad77c690d","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":10,"uuid":"b6c30d56-f578-4f5b-b4af-4cb3d156e58e","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":11,"uuid":"14b91c3e-fe80-498f-9500-c08b4212e7b3","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":12,"uuid":"41c31d9e-34dc-4f0c-aff7-7650a76b6f9b","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2016-08-25 22:49:26","created_by":1,"updated_at":"2016-08-25 22:49:26","updated_by":1},{"id":13,"uuid":"7930c6ae-2aee-424f-8c92-0bd5796bca6a","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":14,"uuid":"20ef9de9-db29-49fb-81c5-ca0fb261902f","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":15,"uuid":"3bd95044-6982-49bf-808b-470cbc349197","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":16,"uuid":"eb0014b6-74cf-4791-a618-71311072377f","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":17,"uuid":"95ede8f5-b4ca-44c2-9086-f4339ffa8ab7","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":18,"uuid":"5f80a836-ee1d-47e0-bf78-272a0b4d72c8","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":19,"uuid":"09987b4b-9879-4218-88af-c2054c352ee9","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":20,"uuid":"57a3ac75-737b-475b-99e0-0d3896ab42eb","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":21,"uuid":"24527e64-592b-45cf-bc9c-1e5b3e9985a9","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":22,"uuid":"b2468d9d-98d8-4338-b3ee-7a0ac405eca1","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:27","created_by":1,"updated_at":"2016-08-25 22:49:27","updated_by":1},{"id":23,"uuid":"ec65a35d-c4f6-444c-9c08-9d723b51db76","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":24,"uuid":"12e9f33c-a65c-49ea-b643-770e029440d3","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":25,"uuid":"1e11bdc7-3d6c-4d00-abea-dbc0ddb98519","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":26,"uuid":"dea142fd-7cb1-4066-931d-a01a8b6d5392","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":27,"uuid":"43aa5d01-3716-488b-b062-b8895a110c75","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":28,"uuid":"485d4a18-c9e0-4cde-b2c3-a03915fd3851","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":29,"uuid":"0b40d5f4-8cba-4e4e-b90e-9910f9778a27","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":30,"uuid":"422a8629-4bc1-4ab1-8b10-f344c637126f","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":31,"uuid":"a3b9ebf1-ab13-45d5-b9fb-5eef16a8332b","name":"Browse clients","object_type":"client","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:28","created_by":1,"updated_at":"2016-08-25 22:49:28","updated_by":1},{"id":32,"uuid":"45a7f51b-e3db-472f-bbb7-278c9250468c","name":"Read clients","object_type":"client","action_type":"read","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":33,"uuid":"8e01d784-c7aa-4f58-8711-f786bf292662","name":"Edit clients","object_type":"client","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":34,"uuid":"ac4de9e0-2985-4faa-97cd-b03095e5d1fe","name":"Add clients","object_type":"client","action_type":"add","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":35,"uuid":"008a7859-d00f-40f6-8857-567be8ce5d12","name":"Delete clients","object_type":"client","action_type":"destroy","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":36,"uuid":"561ea079-2737-499c-b855-fdd1154c887c","name":"Browse subscribers","object_type":"subscriber","action_type":"browse","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":37,"uuid":"9fddc082-c418-4373-a8f0-2843839293e1","name":"Read subscribers","object_type":"subscriber","action_type":"read","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":38,"uuid":"7e29c11d-0865-42a3-8001-05c6236bd138","name":"Edit subscribers","object_type":"subscriber","action_type":"edit","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":39,"uuid":"91f4638a-f6fd-4eac-870f-9cea46483667","name":"Add subscribers","object_type":"subscriber","action_type":"add","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1},{"id":40,"uuid":"be4526f7-8518-416b-9c58-11fda3272eca","name":"Delete subscribers","object_type":"subscriber","action_type":"destroy","object_id":null,"created_at":"2016-08-25 22:49:29","created_by":1,"updated_at":"2016-08-25 22:49:29","updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":1,"permission_id":31},{"id":32,"role_id":1,"permission_id":32},{"id":33,"role_id":1,"permission_id":33},{"id":34,"role_id":1,"permission_id":34},{"id":35,"role_id":1,"permission_id":35},{"id":36,"role_id":1,"permission_id":36},{"id":37,"role_id":1,"permission_id":37},{"id":38,"role_id":1,"permission_id":38},{"id":39,"role_id":1,"permission_id":39},{"id":40,"role_id":1,"permission_id":40},{"id":41,"role_id":2,"permission_id":8},{"id":42,"role_id":2,"permission_id":9},{"id":43,"role_id":2,"permission_id":10},{"id":44,"role_id":2,"permission_id":11},{"id":45,"role_id":2,"permission_id":12},{"id":46,"role_id":2,"permission_id":13},{"id":47,"role_id":2,"permission_id":14},{"id":48,"role_id":2,"permission_id":16},{"id":49,"role_id":2,"permission_id":17},{"id":50,"role_id":2,"permission_id":18},{"id":51,"role_id":2,"permission_id":19},{"id":52,"role_id":2,"permission_id":20},{"id":53,"role_id":2,"permission_id":21},{"id":54,"role_id":2,"permission_id":24},{"id":55,"role_id":2,"permission_id":25},{"id":56,"role_id":2,"permission_id":26},{"id":57,"role_id":2,"permission_id":27},{"id":58,"role_id":2,"permission_id":28},{"id":59,"role_id":2,"permission_id":29},{"id":60,"role_id":2,"permission_id":30},{"id":61,"role_id":2,"permission_id":31},{"id":62,"role_id":2,"permission_id":32},{"id":63,"role_id":2,"permission_id":33},{"id":64,"role_id":2,"permission_id":34},{"id":65,"role_id":2,"permission_id":35},{"id":66,"role_id":2,"permission_id":39},{"id":67,"role_id":3,"permission_id":8},{"id":68,"role_id":3,"permission_id":9},{"id":69,"role_id":3,"permission_id":11},{"id":70,"role_id":3,"permission_id":13},{"id":71,"role_id":3,"permission_id":14},{"id":72,"role_id":3,"permission_id":16},{"id":73,"role_id":3,"permission_id":17},{"id":74,"role_id":3,"permission_id":18},{"id":75,"role_id":3,"permission_id":20},{"id":76,"role_id":3,"permission_id":24},{"id":77,"role_id":3,"permission_id":25},{"id":78,"role_id":3,"permission_id":30},{"id":79,"role_id":3,"permission_id":31},{"id":80,"role_id":3,"permission_id":32},{"id":81,"role_id":3,"permission_id":33},{"id":82,"role_id":3,"permission_id":34},{"id":83,"role_id":3,"permission_id":35},{"id":84,"role_id":3,"permission_id":39}],"permissions_apps":[],"settings":[{"id":1,"uuid":"1f9a6ddd-dc22-437b-b190-5633bb4d4341","key":"databaseVersion","value":"006","type":"core","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:49:41","updated_by":1},{"id":2,"uuid":"29f7abcd-9c89-4193-bf29-6c409176b9c4","key":"dbHash","value":"33384388-2f2d-4b7f-bd24-af9e490ee50e","type":"core","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:49:44","updated_by":1},{"id":3,"uuid":"65310349-28a3-4b5d-9c4b-23f94c1659ff","key":"nextUpdateCheck","value":"1472848232","type":"core","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-09-01 21:30:32","updated_by":1},{"id":4,"uuid":"c806dd9a-c497-4f95-b8fd-cb1a0adb3f8d","key":"displayUpdateNotification","value":"0.10.0","type":"core","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-09-01 21:30:32","updated_by":1},{"id":5,"uuid":"4fbc823e-c83a-4afa-8c45-f2bd56bf6177","key":"seenNotifications","value":"[]","type":"core","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:49:41","updated_by":1},{"id":6,"uuid":"9d181d51-c531-4ad6-8728-854574af00d6","key":"migrations","value":"{}","type":"core","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:49:41","updated_by":1},{"id":7,"uuid":"4fd16179-d4d5-4ff2-a0d3-ecf9f1291917","key":"title","value":"Foxy Panda ~","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":8,"uuid":"68fcc481-e5e7-4719-9449-ee51ebecf71e","key":"description","value":"Tim's Blog","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":9,"uuid":"2f0f32a5-67a4-4c28-9b4c-876aa9ce5959","key":"logo","value":"","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":10,"uuid":"e762245e-6cd2-4481-bccc-0dd8b9382d5a","key":"cover","value":"","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":11,"uuid":"cd494a08-45d0-46a2-ab67-26692915d063","key":"defaultLang","value":"en_US","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":12,"uuid":"7d265df1-a592-4f55-aa7a-c82692ae2b5f","key":"postsPerPage","value":"1337","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":13,"uuid":"ea927994-605c-4cea-84d0-634b16c42655","key":"activeTimezone","value":"Etc/UTC","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":14,"uuid":"63e3f6c5-0556-40e5-9848-b76fb0dbc2c4","key":"forceI18n","value":"true","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":15,"uuid":"d1a3c43f-979f-43da-a30b-fd5d02f2b756","key":"permalinks","value":"/:slug/","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":16,"uuid":"7a067612-a53c-481f-ac3b-cadce04d2d9b","key":"ghost_head","value":"","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":17,"uuid":"84d1e50e-5790-4483-9d0d-77b7b9153c19","key":"ghost_foot","value":"","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":18,"uuid":"4bb45ad6-a6f4-4cc1-a210-7bcfd0ec6c2c","key":"facebook","value":"","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":19,"uuid":"8b397255-d644-4605-9b50-e022035a3504","key":"twitter","value":"","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":20,"uuid":"a1888978-176f-4007-9c9e-32a15e2baa2b","key":"labs","value":"{}","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":21,"uuid":"4b72e216-e128-4121-a77d-8c289d50ee0d","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"/\"}, {\"label\":\"About\",\"url\":\"/about/\"}]","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":22,"uuid":"9e082a53-6de7-49fe-941b-8d8df057086d","key":"slack","value":"[{\"url\":\"\"}]","type":"blog","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":23,"uuid":"c3d4d2e2-1342-48b2-ab61-201fc169d4bd","key":"activeApps","value":"[\"foxy-panda-ghost-app\"]","type":"app","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:49:41","updated_by":1},{"id":24,"uuid":"fca50fcf-2f7e-4a0d-bd10-bd5b49f5db3e","key":"installedApps","value":"[\"foxy-panda-ghost-app\"]","type":"app","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2017-06-20 15:09:12","updated_by":1},{"id":25,"uuid":"5ee7908f-e6fe-4f59-be42-2590d87997f1","key":"isPrivate","value":"false","type":"private","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":26,"uuid":"bd115a22-af6f-4ccb-91ed-283ed8d07d9f","key":"password","value":"","type":"private","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":27,"uuid":"36bf3d54-124f-45f5-b35a-9e0e2a8c013f","key":"activeTheme","value":"foxy-panda","type":"theme","created_at":"2016-08-25 22:49:41","created_by":1,"updated_at":"2016-08-25 22:55:50","updated_by":1},{"id":28,"uuid":"5b3ffc0a-c1ff-415a-95cc-e619f36c44b9","key":"amp","value":"true","type":"blog","created_at":"2017-06-20 15:09:12","created_by":1,"updated_at":"2017-06-20 15:09:12","updated_by":1}],"tags":[{"id":1,"uuid":"029a2dae-c8fb-4c06-b29f-26852558e547","name":"Getting Started","slug":"getting-started","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-08-25 22:49:24","created_by":1,"updated_at":"2016-08-25 22:49:24","updated_by":1},{"id":2,"uuid":"f1c2fd0f-7ebd-4458-a1c5-c85f1e0f38ad","name":"Projects","slug":"projects","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-08-27 19:26:32","created_by":1,"updated_at":"2016-08-27 19:26:32","updated_by":1},{"id":3,"uuid":"6f391291-1025-41e9-a2a9-484aecf688bb","name":"Blog","slug":"blog","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-08-27 19:26:50","created_by":1,"updated_at":"2016-08-28 13:21:39","updated_by":1}],"posts_tags":[{"id":1,"post_id":1,"tag_id":1,"sort_order":0},{"id":2,"post_id":9,"tag_id":3,"sort_order":0},{"id":3,"post_id":5,"tag_id":2,"sort_order":0},{"id":4,"post_id":8,"tag_id":3,"sort_order":0},{"id":5,"post_id":6,"tag_id":3,"sort_order":0},{"id":6,"post_id":4,"tag_id":2,"sort_order":0},{"id":7,"post_id":3,"tag_id":2,"sort_order":0}],"apps":[],"app_settings":[],"app_fields":[],"subscribers":[]}}